pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"부상신고자수"] = pred
}else
{
lm_model <- lm(부상신고자수~사망자수+경상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"부상신고자수"] = pred
}
}else
{
lm_model <- lm(부상신고자수~사망자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"부상신고자수"] = pred
}
}
if("경상자수" %in% col_names[is.na(test_dat[i,])])
{
if("중상자수" %in% col_names[is.na(test_dat[i,])] == 0)
{
rf_model <- randomForest::randomForest(경상자수~중상자수+사망자수+부상신고자수, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"경상자수"] = pred
}else
{
rf_model <- randomForest::randomForest(경상자수~사망자수+부상신고자수, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"경상자수"] = pred
}
}
if("중상자수" %in% col_names[is.na(test_dat[i,])])
{
rf_model <- randomForest::randomForest(중상자수~사망자수+부상신고자수+경상자수, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"중상자수"] = pred
}
if("사상자수" %in% col_names[is.na(test_dat[i,])])
{
lm_model <- lm(사상자수~부상신고자수+중상자수+사망자수+경상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"사상자수"] = pred
}
if("법규위반" %in% col_names[is.na(test_dat[i,])])
{
rf_model <- randomForest::randomForest(법규위반~사상자수, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"법규위반"] = levels(pred)[levels(pred) == pred]
}
if("도로형태_대분류" %in% col_names[is.na(test_dat[i,])])
{
if(!"도로형태" %in% col_names[is.na(test_dat[i,])])
{
rf_model <- randomForest::randomForest(도로형태_대분류~도로형태, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"도로형태_대분류"] = levels(pred)[levels(pred) == pred]
}else
{
rf_model <- randomForest::randomForest(도로형태_대분류~사상자수+법규위반, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"도로형태_대분류"] = levels(pred)[levels(pred) == pred]
rf_model <- randomForest::randomForest(도로형태~사상자수+법규위반+도로형태_대분류, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"도로형태"] = levels(pred)[levels(pred) == pred]
}
}
}
for(i in 1:nrow(test_dat))
{
if(c("사망자수") %in% col_names[is.na(test_dat[i,])])
{
if(c("사상자수") %in% col_names[is.na(test_dat[i,])] == 0)
{
lm_model <- lm(사망자수~사상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"사망자수"] = pred
if(c("경상자수") %in% col_names[is.na(test_dat[i,])])
{
if(sum(c("부상신고자수", "중상자수") %in% col_names[is.na(test_dat[i,])]) == 0) # 둘다 있는 경우
{
lm_model <- lm(경상자수~사상자수+사망자수+부상신고자수+중상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"경상자수"] = pred
}else if(sum(c("부상신고자수", "중상자수") %in% col_names[is.na(test_dat[i,])]) == 1) # 하나만
{
if(c("부상신고자수") %in% col_names[is.na(test_dat[i,])] == 0)
{
lm_model <- lm(경상자수~사상자수+사망자수+부상신고자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"경상자수"] = pred
}else
{
lm_model <- lm(경상자수~사상자수+사망자수+중상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"경상자수"] = pred
}
}
}else if(c("중상자수") %in% col_names[is.na(test_dat[i,])])
{
if(sum(c("부상신고자수", "경상자수") %in% col_names[is.na(test_dat[i,])]) == 0) # 둘다 있는 경우
{
lm_model <- lm(중상자수~사상자수+사망자수+부상신고자수+경상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"중상자수"] = pred
}else if(sum(c("부상신고자수", "경상자수") %in% col_names[is.na(test_dat[i,])]) == 1) # 하나만
{
if(c("부상신고자수") %in% col_names[is.na(test_dat[i,])] == 0)
{
lm_model <- lm(중상자수~사상자수+사망자수+부상신고자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"중상자수"] = pred
}else
{
lm_model <- lm(중상자수~사상자수+사망자수+경상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"중상자수"] = pred
}
}
}else if(c("부상신고자수") %in% col_names[is.na(test_dat[i,])]) #부상신고자 없을때
{
if(sum(c("중상자수", "경상자수") %in% col_names[is.na(test_dat[i,])]) == 0) # 둘다 있는 경우
{
lm_model <- lm(부상신고자수~사상자수+사망자수+중상자수+경상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"부상신고자수"] = pred
}
}
}else
{
if(sum(c("발생지시군구", "사고유형_대분류") %in% col_names[is.na(test_dat[i,])]) == 0)
{
lm_model <- lm(사망자수~발생지시군구+사고유형_대분류, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"사망자수"] = pred
}else
{
if(sum(c("사고유형_중분류", "도로형태") %in% col_names[is.na(test_dat[i,])]) == 0)
{
lm_model <- lm(사망자수~사고유형_중분류+도로형태, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"사망자수"] = pred
}else
{
lm_model <- lm(사망자수~중상자수+경상자수+부상신고자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"사망자수"] = pred
}
}
}
}
if("부상신고자수" %in% col_names[is.na(test_dat[i,])])
{
if(sum(c("중상자수", "경상자수") %in% col_names[is.na(test_dat[i,])]) == 0) # 둘다 있는 경우
{
lm_model <- lm(부상신고자수~사망자수+중상자수+경상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"부상신고자수"] = pred
}else if(sum(c("중상자수", "경상자수") %in% col_names[is.na(test_dat[i,])]) == 1) # 하나만 있는 경우
{
if(!"중상자수" %in% col_names[is.na(test_dat[i,])])
{
lm_model <- lm(부상신고자수~사망자수+중상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"부상신고자수"] = pred
}else
{
lm_model <- lm(부상신고자수~사망자수+경상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"부상신고자수"] = pred
}
}else
{
lm_model <- lm(부상신고자수~사망자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"부상신고자수"] = pred
}
}
if("경상자수" %in% col_names[is.na(test_dat[i,])])
{
if("중상자수" %in% col_names[is.na(test_dat[i,])] == 0)
{
rf_model <- randomForest::randomForest(경상자수~중상자수+사망자수+부상신고자수, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"경상자수"] = pred
}else
{
rf_model <- randomForest::randomForest(경상자수~사망자수+부상신고자수, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"경상자수"] = pred
}
}
if("중상자수" %in% col_names[is.na(test_dat[i,])])
{
rf_model <- randomForest::randomForest(중상자수~사망자수+부상신고자수+경상자수, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"중상자수"] = pred
}
if("사상자수" %in% col_names[is.na(test_dat[i,])])
{
lm_model <- lm(사상자수~부상신고자수+중상자수+사망자수+경상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"사상자수"] = pred
}
if("법규위반" %in% col_names[is.na(test_dat[i,])])
{
rf_model <- randomForest::randomForest(법규위반~사상자수, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"법규위반"] = levels(pred)[levels(pred) == pred]
}
if("도로형태_대분류" %in% col_names[is.na(test_dat[i,])])
{
if(!"도로형태" %in% col_names[is.na(test_dat[i,])])
{
rf_model <- randomForest::randomForest(도로형태_대분류~도로형태, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"도로형태_대분류"] = levels(pred)[levels(pred) == pred]
}else
{
rf_model <- randomForest::randomForest(도로형태_대분류~사상자수+법규위반, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"도로형태_대분류"] = levels(pred)[levels(pred) == pred]
rf_model <- randomForest::randomForest(도로형태~사상자수+법규위반+도로형태_대분류, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"도로형태"] = levels(pred)[levels(pred) == pred]
}
}
}
test_dat
for(i in 1:nrow(test_dat))
{
if(c("사망자수") %in% col_names[is.na(test_dat[i,])])
{
if(c("사상자수") %in% col_names[is.na(test_dat[i,])] == 0)
{
lm_model <- lm(사망자수~사상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"사망자수"] = pred
if(c("경상자수") %in% col_names[is.na(test_dat[i,])])
{
if(sum(c("부상신고자수", "중상자수") %in% col_names[is.na(test_dat[i,])]) == 0) # 둘다 있는 경우
{
lm_model <- lm(경상자수~사상자수+사망자수+부상신고자수+중상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"경상자수"] = pred
}else if(sum(c("부상신고자수", "중상자수") %in% col_names[is.na(test_dat[i,])]) == 1) # 하나만
{
if(c("부상신고자수") %in% col_names[is.na(test_dat[i,])] == 0)
{
lm_model <- lm(경상자수~사상자수+사망자수+부상신고자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"경상자수"] = pred
}else
{
lm_model <- lm(경상자수~사상자수+사망자수+중상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"경상자수"] = pred
}
}
}else if(c("중상자수") %in% col_names[is.na(test_dat[i,])])
{
if(sum(c("부상신고자수", "경상자수") %in% col_names[is.na(test_dat[i,])]) == 0) # 둘다 있는 경우
{
lm_model <- lm(중상자수~사상자수+사망자수+부상신고자수+경상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"중상자수"] = pred
}else if(sum(c("부상신고자수", "경상자수") %in% col_names[is.na(test_dat[i,])]) == 1) # 하나만
{
if(c("부상신고자수") %in% col_names[is.na(test_dat[i,])] == 0)
{
lm_model <- lm(중상자수~사상자수+사망자수+부상신고자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"중상자수"] = pred
}else
{
lm_model <- lm(중상자수~사상자수+사망자수+경상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"중상자수"] = pred
}
}
}else if(c("부상신고자수") %in% col_names[is.na(test_dat[i,])]) #부상신고자 없을때
{
if(sum(c("중상자수", "경상자수") %in% col_names[is.na(test_dat[i,])]) == 0) # 둘다 있는 경우
{
lm_model <- lm(부상신고자수~사상자수+사망자수+중상자수+경상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"부상신고자수"] = pred
}
}
}else
{
if(sum(c("발생지시군구", "사고유형_대분류") %in% col_names[is.na(test_dat[i,])]) == 0)
{
lm_model <- lm(사망자수~발생지시군구+사고유형_대분류, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"사망자수"] = pred
}else
{
if(sum(c("사고유형_중분류", "도로형태") %in% col_names[is.na(test_dat[i,])]) == 0)
{
lm_model <- lm(사망자수~사고유형_중분류+도로형태, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"사망자수"] = pred
}else
{
lm_model <- lm(사망자수~중상자수+경상자수+부상신고자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"사망자수"] = pred
}
}
}
}
if("부상신고자수" %in% col_names[is.na(test_dat[i,])])
{
if(sum(c("중상자수", "경상자수") %in% col_names[is.na(test_dat[i,])]) == 0) # 둘다 있는 경우
{
lm_model <- lm(부상신고자수~사망자수+중상자수+경상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"부상신고자수"] = pred
}else if(sum(c("중상자수", "경상자수") %in% col_names[is.na(test_dat[i,])]) == 1) # 하나만 있는 경우
{
if(!"중상자수" %in% col_names[is.na(test_dat[i,])])
{
lm_model <- lm(부상신고자수~사망자수+중상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"부상신고자수"] = pred
}else
{
lm_model <- lm(부상신고자수~사망자수+경상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"부상신고자수"] = pred
}
}else
{
lm_model <- lm(부상신고자수~사망자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"부상신고자수"] = pred
}
}
if("경상자수" %in% col_names[is.na(test_dat[i,])])
{
if("중상자수" %in% col_names[is.na(test_dat[i,])] == 0)
{
rf_model <- randomForest::randomForest(경상자수~중상자수+사망자수+부상신고자수, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"경상자수"] = pred
}else
{
rf_model <- randomForest::randomForest(경상자수~사망자수+부상신고자수, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"경상자수"] = pred
}
}
if("중상자수" %in% col_names[is.na(test_dat[i,])])
{
rf_model <- randomForest::randomForest(중상자수~사망자수+부상신고자수+경상자수, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"중상자수"] = pred
}
if("사상자수" %in% col_names[is.na(test_dat[i,])])
{
lm_model <- lm(사상자수~부상신고자수+중상자수+사망자수+경상자수, dat)
pred <- predict(lm_model, newdata = test_dat[i,])
test_dat[i,"사상자수"] = pred
}
if("법규위반" %in% col_names[is.na(test_dat[i,])])
{
rf_model <- randomForest::randomForest(법규위반~사상자수, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"법규위반"] = levels(pred)[levels(pred) == pred]
}
if("도로형태_대분류" %in% col_names[is.na(test_dat[i,])])
{
if(!"도로형태" %in% col_names[is.na(test_dat[i,])])
{
rf_model <- randomForest::randomForest(도로형태_대분류~도로형태, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"도로형태_대분류"] = levels(pred)[levels(pred) == pred]
}else
{
rf_model <- randomForest::randomForest(도로형태_대분류~사상자수+법규위반, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"도로형태_대분류"] = levels(pred)[levels(pred) == pred]
}
}
if("도로형태" %in% col_names[is.na(test_dat[i,])])
{
rf_model <- randomForest::randomForest(도로형태~사상자수+법규위반+도로형태_대분류, dat)
pred <- predict(rf_model, newdata = test_dat[i,])
test_dat[i,"도로형태"] = levels(pred)[levels(pred) == pred]
}
}
test_dat
result <- read.csv('result_kor.csv', stringsAsFactors = F)
result$열
result
result$행 <- result$행-1
result$값
class(result$값)
for(i in 1:nrow(result))
{
# if(class(test_dat[result[i,1], result[i,2]]) == "factor")
# {
#   result[i,3] <- as.character(test_dat[result[i,1], result[i,2]])
# }else
# {
result[i,3] <- test_dat[result[i,1], result[i,2]]
# }
}
result$값 <- as.character(result$값)
for(i in 1:nrow(result))
{
# if(class(test_dat[result[i,1], result[i,2]]) == "factor")
# {
#   result[i,3] <- as.character(test_dat[result[i,1], result[i,2]])
# }else
# {
result[i,3] <- test_dat[result[i,1], result[i,2]]
# }
}
for(i in 1:length(result$열))
{
if(result[i,"열"] == "A")
{
result[i,"열"] = 1
}
else if(result[i,"열"] == "B")
{
result[i,"열"] = 2
}
else if(result[i,"열"] == "C")
{
result[i,"열"] = 3
}
else if(result[i,"열"] == "D")
{
result[i,"열"] = 4
}
else if(result[i,"열"] == "E")
{
result[i,"열"] = 5
}
else if(result[i,"열"] == "F")
{
result[i,"열"] = 6
}
else if(result[i,"열"] == "G")
{
result[i,"열"] = 7
}
else if(result[i,"열"] == "H")
{
result[i,"열"] = 8
}
else if(result[i,"열"] == "I")
{
result[i,"열"] = 9
}
else if(result[i,"열"] == "J")
{
result[i,"열"] = 10
}
else if(result[i,"열"] == "K")
{
result[i,"열"] = 11
}
else if(result[i,"열"] == "L")
{
result[i,"열"] = 12
}
else if(result[i,"열"] == "M")
{
result[i,"열"] = 13
}
else if(result[i,"열"] == "N")
{
result[i,"열"] = 14
}
else if(result[i,"열"] == "O")
{
result[i,"열"] = 15
}
else if(result[i,"열"] == "P")
{
result[i,"열"] = 16
}
}
result$열 <- as.integer(result$열)
for(i in 1:nrow(result))
{
# if(class(test_dat[result[i,1], result[i,2]]) == "factor")
# {
#   result[i,3] <- as.character(test_dat[result[i,1], result[i,2]])
# }else
# {
result[i,3] <- test_dat[result[i,1], result[i,2]]
# }
}
write.csv(result, 'D:/samsung_ai/test/result_test.csv', row.names = F)
result
for(i in 1:nrow(result))
{
if(class(test_dat[result[i,1], result[i,2]]) == "factor")
{
result[i,3] <- as.character(test_dat[result[i,1], result[i,2]])
}else
{
result[i,3] <- test_dat[result[i,1], result[i,2]]
}
}
write.csv(result, 'D:/samsung_ai/test/result_test.csv', row.names = F)
write.csv(test_dat, 'D:/samsung_ai/test/test_dat.csv', row.names = F)
result
write.csv(result, 'D:/samsung_ai/test/result_test.csv', row.names = F)
write.csv(test_dat, 'D:/samsung_ai/test/test_dat.csv', row.names = F)
